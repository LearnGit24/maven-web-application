pipeline
{
    
agent any

tools{
maven "maven3.8.6"
}

triggers {
  pollSCM ('* * * * *')
}

options {
  timestamps()
   buildDiscarder logRotator(artifactDaysToKeepStr: '5', artifactNumToKeepStr: '', daysToKeepStr: '', numToKeepStr: '5')
}

   
stages{
    

	// Get the Code from Github
  	stage("CheckoutCode"){
	steps{
	    slackNotification('STARTED')  
	git branch: 'development', credentialsId: '003c4ea1-0ddf-423d-b9bc-ff10e310fb99', url: 		'https://github.com/LearnGit24/maven-web-application.git'
	}
	}
	
	// Do the build
	stage('Build'){
	steps{
	sh "mvn clean package"
	}
	}
	
	//Execute SonarQube  Report
	stage("ExecuteSonarQubeReport"){
	steps{
	sh "mvn sonar:sonar"
	}
	}
	
	//upload to nexus
	stage("UploadArtifactstoNexus"){
	steps{
	sh "mvn deploy"
	}
	}
	
	
	// Deploy to TomCat Server
	stage("ToTomcatServer"){
	steps{
	sshagent(['e4b5afa4-1970-4d51-8e1e-a2fb39f04dd7']) {
   	sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@13.232.206.235:/opt/apache-tomcat-9.0.64/webapps/"
	}	
	}
	}
	
	

} // stages Closing

post {
  success {
    slackNotification(currentBuild.result)
  }
  failure {
    slackNotification(currentBuild.result)
  }
}

} // pipeline Closing


def slackNotification(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}

